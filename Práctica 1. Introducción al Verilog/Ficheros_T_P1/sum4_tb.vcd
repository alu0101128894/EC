$date
	Thu Oct  3 16:31:16 2019
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module sum4_tb $end
$var wire 1 ! test_c_out $end
$var wire 4 " test_S [3:0] $end
$var reg 4 # test_A [3:0] $end
$var reg 4 $ test_B [3:0] $end
$var reg 1 % test_c_in $end
$scope module sum $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % c_in $end
$var wire 1 ! c_out $end
$var wire 4 ( S [3:0] $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % c_in $end
$var wire 1 + c_out $end
$var wire 1 . sum_ha1 $end
$var wire 1 / sum $end
$var wire 1 0 c_ha2 $end
$var wire 1 1 c_ha1 $end
$scope module ha1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 1 carry $end
$var wire 1 . sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 % a $end
$var wire 1 . b $end
$var wire 1 0 carry $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 + c_in $end
$var wire 1 * c_out $end
$var wire 1 4 sum_ha1 $end
$var wire 1 5 sum $end
$var wire 1 6 c_ha2 $end
$var wire 1 7 c_ha1 $end
$scope module ha1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 7 carry $end
$var wire 1 4 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 + a $end
$var wire 1 4 b $end
$var wire 1 6 carry $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 * c_in $end
$var wire 1 ) c_out $end
$var wire 1 : sum_ha1 $end
$var wire 1 ; sum $end
$var wire 1 < c_ha2 $end
$var wire 1 = c_ha1 $end
$scope module ha1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 = carry $end
$var wire 1 : sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 * a $end
$var wire 1 : b $end
$var wire 1 < carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ) c_in $end
$var wire 1 ! c_out $end
$var wire 1 @ sum_ha1 $end
$var wire 1 A sum $end
$var wire 1 B c_ha2 $end
$var wire 1 C c_ha1 $end
$scope module ha1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 C carry $end
$var wire 1 @ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ) a $end
$var wire 1 @ b $end
$var wire 1 B carry $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
1/
0.
0-
0,
0+
0*
0)
b1 (
b0 '
b0 &
1%
b0 $
b0 #
b1 "
0!
$end
#2000
1!
1B
1)
1<
1*
16
1+
05
0;
0A
11
14
1:
1@
1-
1,
12
18
1>
b0 "
b0 (
0/
b1 $
b1 '
b1111 #
b1111 &
0%
#4000
15
06
1;
0<
1A
0B
04
17
0:
1=
0@
1C
13
19
1?
b1111 "
b1111 (
1/
b1111 $
b1111 '
1%
#6000
0/
10
1+
05
16
1*
0;
1<
1)
b0 "
b0 (
0A
1B
1!
1.
01
14
07
1:
0=
1@
0C
0,
02
08
0>
b0 #
b0 &
#8000
0!
1A
0B
0)
1;
0<
0*
15
06
0+
0-
09
1,
18
b1111 "
b1111 (
1/
00
b1010 $
b1010 '
b101 #
b101 &
0%
#10000
